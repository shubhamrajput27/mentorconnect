class MentorConnectApp{constructor(){this.theme=localStorage.getItem('theme')||'light';this.sidebarOpen=window.innerWidth>768;this.cache=new Map();this.debounceTimers=new Map();this.observers=new Map();this.init()}init(){requestAnimationFrame(()=>{this.initializeTheme();this.initializeSidebar();this.initializeSearch();this.initializeNotifications();this.initializeAnimations();this.bindEvents();this.initializeIntersectionObserver();this.initializePerformanceMonitoring()})}initializeTheme(){const themeToggle=document.querySelector('.theme-toggle');if(!themeToggle)return;const savedTheme=localStorage.getItem('theme')||'light';document.documentElement.setAttribute('data-theme',savedTheme);this.updateThemeIcon(savedTheme);if(!document.querySelector('.landing-page')){themeToggle.addEventListener('click',()=>{const currentTheme=document.documentElement.getAttribute('data-theme');const newTheme=currentTheme==='dark'?'light':'dark';document.documentElement.classList.add('theme-transitioning');document.documentElement.style.transition='all 0.3s cubic-bezier(0.4,0,0.2,1)';document.documentElement.setAttribute('data-theme',newTheme);localStorage.setItem('theme',newTheme);this.updateThemeIcon(newTheme);themeToggle.style.transform='scale(0.9)';setTimeout(()=>{themeToggle.style.transform=''},150);setTimeout(()=>{document.documentElement.style.transition='';document.documentElement.classList.remove('theme-transitioning')},300)})}}updateThemeIcon(theme){const themeToggle=document.querySelector('.theme-toggle');if(themeToggle){const icon=themeToggle.querySelector('i');icon.className=theme==='dark'?'fas fa-sun':'fas fa-moon'}}initializeSidebar(){const sidebar=document.querySelector('.sidebar');const sidebarToggle=document.querySelector('.sidebar-toggle');const overlay=document.querySelector('.sidebar-overlay');if(!sidebar||!sidebarToggle)return;sidebarToggle.addEventListener('click',()=>this.toggleSidebar());if(overlay){overlay.addEventListener('click',()=>this.closeSidebar())}document.addEventListener('keydown',(e)=>{if(e.key==='Escape'&&this.sidebarOpen){this.closeSidebar()}});this.updateSidebarState()}toggleSidebar(){this.sidebarOpen=!this.sidebarOpen;this.updateSidebarState()}closeSidebar(){this.sidebarOpen=false;this.updateSidebarState()}updateSidebarState(){const sidebar=document.querySelector('.sidebar');const overlay=document.querySelector('.sidebar-overlay');const body=document.body;if(!sidebar)return;if(this.sidebarOpen){sidebar.classList.add('open');body.classList.add('sidebar-open');if(overlay)overlay.classList.add('active')}else{sidebar.classList.remove('open');body.classList.remove('sidebar-open');if(overlay)overlay.classList.remove('active')}}initializeSearch(){const searchInput=document.querySelector('.search-input');const searchResults=document.querySelector('.search-results');if(!searchInput)return;searchInput.addEventListener('input',this.debounce((e)=>{const query=e.target.value.trim();if(query.length>=2){this.performSearch(query)}else if(searchResults){searchResults.innerHTML='';searchResults.style.display='none'}},300))}async performSearch(query){const cacheKey=`search_${query}`;if(this.cache.has(cacheKey)){this.displaySearchResults(this.cache.get(cacheKey));return}try{const response=await fetch(`/api/search.php?q=${encodeURIComponent(query)}`);const data=await response.json();this.cache.set(cacheKey,data);this.displaySearchResults(data)}catch(error){console.error('Search error:',error)}}displaySearchResults(results){const searchResults=document.querySelector('.search-results');if(!searchResults)return;if(!results||results.length===0){searchResults.innerHTML='<div class="no-results">No results found</div>';searchResults.style.display='block';return}const html=results.map(result=>`<div class="search-result" data-id="${result.id}"><h4>${result.title}</h4><p>${result.description}</p></div>`).join('');searchResults.innerHTML=html;searchResults.style.display='block'}initializeNotifications(){this.checkNotifications();setInterval(()=>this.checkNotifications(),30000)}async checkNotifications(){try{const response=await fetch('/api/notifications.php');const notifications=await response.json();this.updateNotificationBadge(notifications.unread_count);this.displayNotifications(notifications.recent)}catch(error){console.error('Notification error:',error)}}updateNotificationBadge(count){const badge=document.querySelector('.notification-badge');if(badge){badge.textContent=count>0?count:'';badge.style.display=count>0?'block':'none'}}displayNotifications(notifications){const container=document.querySelector('.notifications-list');if(!container)return;const html=notifications.map(notif=>`<div class="notification ${notif.read?'read':'unread'}" data-id="${notif.id}"><div class="notification-content"><h5>${notif.title}</h5><p>${notif.message}</p><span class="notification-time">${this.formatTime(notif.created_at)}</span></div></div>`).join('');container.innerHTML=html}initializeAnimations(){const elements=document.querySelectorAll('[data-animate]');elements.forEach(el=>{const animation=el.dataset.animate;el.classList.add(`animate-${animation}`)})}bindEvents(){document.addEventListener('click',this.handleGlobalClick.bind(this));document.addEventListener('submit',this.handleFormSubmit.bind(this));window.addEventListener('resize',this.debounce(()=>{this.handleResize()},250))}handleGlobalClick(e){if(e.target.matches('.btn-async')){e.preventDefault();this.handleAsyncAction(e.target)}if(e.target.matches('.notification')){this.markNotificationAsRead(e.target.dataset.id)}}async handleAsyncAction(button){const action=button.dataset.action;const originalText=button.textContent;button.disabled=true;button.textContent='Loading...';try{const response=await fetch(`/api/${action}.php`,{method:'POST',headers:{'Content-Type':'application/json','X-Requested-With':'XMLHttpRequest'},body:JSON.stringify({id:button.dataset.id})});const result=await response.json();if(result.success){this.showToast('Action completed successfully','success')}else{this.showToast(result.message||'Action failed','error')}}catch(error){this.showToast('Network error occurred','error');console.error('Async action error:',error)}finally{button.disabled=false;button.textContent=originalText}}handleFormSubmit(e){const form=e.target;if(form.matches('.ajax-form')){e.preventDefault();this.submitFormAjax(form)}}async submitFormAjax(form){const formData=new FormData(form);const submitBtn=form.querySelector('[type="submit"]');const originalText=submitBtn.textContent;submitBtn.disabled=true;submitBtn.textContent='Submitting...';try{const response=await fetch(form.action,{method:form.method,body:formData});const result=await response.json();if(result.success){this.showToast('Form submitted successfully','success');if(result.redirect){setTimeout(()=>window.location.href=result.redirect,1000)}}else{this.showToast(result.message||'Submission failed','error')}}catch(error){this.showToast('Network error occurred','error');console.error('Form submission error:',error)}finally{submitBtn.disabled=false;submitBtn.textContent=originalText}}handleResize(){if(window.innerWidth>768&&!this.sidebarOpen){this.sidebarOpen=true;this.updateSidebarState()}else if(window.innerWidth<=768&&this.sidebarOpen){this.sidebarOpen=false;this.updateSidebarState()}}initializeIntersectionObserver(){const options={root:null,rootMargin:'50px',threshold:0.1};const observer=new IntersectionObserver((entries)=>{entries.forEach(entry=>{if(entry.isIntersecting){entry.target.classList.add('in-view');if(entry.target.dataset.src){entry.target.src=entry.target.dataset.src;entry.target.removeAttribute('data-src')}}})},options);document.querySelectorAll('[data-animate-on-scroll], [data-src]').forEach(el=>{observer.observe(el)});this.observers.set('intersection',observer)}initializePerformanceMonitoring(){if('performance'in window){const observer=new PerformanceObserver((list)=>{list.getEntries().forEach(entry=>{if(entry.entryType==='largest-contentful-paint'){console.log('LCP:',entry.startTime)}if(entry.entryType==='first-input'){console.log('FID:',entry.processingStart-entry.startTime)}if(entry.entryType==='layout-shift'){console.log('CLS:',entry.value)}})});observer.observe({entryTypes:['largest-contentful-paint','first-input','layout-shift']})}}debounce(func,wait){return function executedFunction(...args){const later=()=>{clearTimeout(this.debounceTimers.get(func));this.debounceTimers.delete(func);func(...args)};clearTimeout(this.debounceTimers.get(func));this.debounceTimers.set(func,setTimeout(later,wait))}.bind(this)}showToast(message,type='info'){const toast=document.createElement('div');toast.className=`toast toast-${type}`;toast.textContent=message;document.body.appendChild(toast);setTimeout(()=>toast.classList.add('show'),100);setTimeout(()=>{toast.classList.remove('show');setTimeout(()=>document.body.removeChild(toast),300)},3000)}formatTime(timestamp){const date=new Date(timestamp);const now=new Date();const diff=now-date;if(diff<60000)return'Just now';if(diff<3600000)return`${Math.floor(diff/60000)}m ago`;if(diff<86400000)return`${Math.floor(diff/3600000)}h ago`;return date.toLocaleDateString()}async markNotificationAsRead(id){try{await fetch('/api/notifications.php',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({action:'mark_read',id:id})})}catch(error){console.error('Mark notification error:',error)}}}document.addEventListener('DOMContentLoaded',()=>{window.mentorApp=new MentorConnectApp()});
